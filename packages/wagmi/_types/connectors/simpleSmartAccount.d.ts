import { type SignerToSimpleSmartAccountParameters, type SmartAccount, type SmartAccountSigner } from "permissionless/accounts";
import { type SponsorUserOperationMiddleware } from "permissionless/actions/smartAccount";
import type { Prettify } from "permissionless/types";
import type { Address, Chain, PublicClient, Transport } from "viem";
export type SmartAccountParameters<T, TTransport extends Transport = Transport, TChain extends Chain | undefined = Chain | undefined, TSource extends string = string, TAddress extends Address = Address> = {
    publicClient: PublicClient<TTransport, TChain>;
    signer: SmartAccountSigner<TSource, TAddress>;
    bundlerTransport: TTransport;
} & SponsorUserOperationMiddleware & T;
export type SimpleSmartAccountParameters<TTransport extends Transport = Transport, TChain extends Chain | undefined = Chain | undefined, TSource extends string = string, TAddress extends Address = Address> = Prettify<SmartAccountParameters<Omit<SignerToSimpleSmartAccountParameters<TSource, TAddress>, "signer">, TTransport, TChain, TSource, TAddress>>;
export declare function smartAccountConnectorHelper<X, TTransport extends Transport = Transport, TChain extends Chain | undefined = Chain | undefined, TSource extends string = string, TAddress extends Address = Address, Name extends string = string>({ bundlerTransport, sponsorUserOperation, account }: Omit<SmartAccountParameters<X, TTransport, TChain, TSource, TAddress>, "signer"> & {
    account: SmartAccount<Name, TTransport, TChain>;
}): Promise<import("wagmi").CreateConnectorFn<unknown, {
    id: string;
    name: string;
    type: string;
    connect: ({ chainId }?: {
        chainId?: number | undefined;
        isReconnecting?: boolean | undefined;
    } | undefined) => Promise<{
        accounts: `0x${string}`[];
        chainId: number;
    }>;
    disconnect: () => Promise<void>;
    getAccounts: () => Promise<`0x${string}`[]>;
    getChainId: () => Promise<number>;
    getProvider: () => Promise<void>;
    isAuthorized: () => Promise<true>;
    onAccountsChanged: () => void;
    onChainChanged: () => void;
    onDisconnect: () => void;
    getClient: ({ chainId: requestedChainId }: {
        chainId: number;
    }) => Promise<{
        account: SmartAccount<Name, TTransport, TChain>;
        batch?: {
            multicall?: boolean | {
                batchSize?: number | undefined;
                wait?: number | undefined;
            } | undefined;
        } | undefined;
        cacheTime: number;
        ccipRead?: false | {
            request?: ((parameters: import("viem").CcipRequestParameters) => Promise<`0x${string}`>) | undefined;
        } | undefined;
        chain: undefined;
        key: string;
        name: string;
        pollingInterval: number;
        request: import("viem").EIP1193RequestFn<import("permissionless/_types/types/bundler").BundlerRpcSchema>;
        transport: ReturnType<SmartAccountParameters<X, TTransport, TChain, TSource, TAddress>["bundlerTransport"]>["config"] & ReturnType<SmartAccountParameters<X, TTransport, TChain, TSource, TAddress>["bundlerTransport"]>["value"];
        type: string;
        uid: string;
        sendTransaction: <TChainOverride extends Chain | undefined>(args: import("viem").SendTransactionParameters<undefined, SmartAccount<Name, TTransport, TChain>, TChainOverride>) => Promise<`0x${string}`>;
        signMessage: (args: import("viem").SignMessageParameters<SmartAccount<Name, TTransport, TChain>>) => Promise<`0x${string}`>;
        signTypedData: <const TTypedData extends {
            [x: string]: readonly import("viem").TypedDataParameter[];
            [x: `string[${string}]`]: undefined;
            [x: `function[${string}]`]: undefined;
            [x: `address[${string}]`]: undefined;
            [x: `bool[${string}]`]: undefined;
            [x: `bytes[${string}]`]: undefined;
            [x: `bytes1[${string}]`]: undefined;
            [x: `bytes20[${string}]`]: undefined;
            [x: `bytes2[${string}]`]: undefined;
            [x: `bytes3[${string}]`]: undefined;
            [x: `bytes4[${string}]`]: undefined;
            [x: `bytes5[${string}]`]: undefined;
            [x: `bytes6[${string}]`]: undefined;
            [x: `bytes7[${string}]`]: undefined;
            [x: `bytes8[${string}]`]: undefined;
            [x: `bytes9[${string}]`]: undefined;
            [x: `bytes10[${string}]`]: undefined;
            [x: `bytes11[${string}]`]: undefined;
            [x: `bytes12[${string}]`]: undefined;
            [x: `bytes13[${string}]`]: undefined;
            [x: `bytes14[${string}]`]: undefined;
            [x: `bytes15[${string}]`]: undefined;
            [x: `bytes16[${string}]`]: undefined;
            [x: `bytes17[${string}]`]: undefined;
            [x: `bytes18[${string}]`]: undefined;
            [x: `bytes19[${string}]`]: undefined;
            [x: `bytes21[${string}]`]: undefined;
            [x: `bytes22[${string}]`]: undefined;
            [x: `bytes23[${string}]`]: undefined;
            [x: `bytes24[${string}]`]: undefined;
            [x: `bytes25[${string}]`]: undefined;
            [x: `bytes26[${string}]`]: undefined;
            [x: `bytes27[${string}]`]: undefined;
            [x: `bytes28[${string}]`]: undefined;
            [x: `bytes29[${string}]`]: undefined;
            [x: `bytes30[${string}]`]: undefined;
            [x: `bytes31[${string}]`]: undefined;
            [x: `bytes32[${string}]`]: undefined;
            [x: `int[${string}]`]: undefined;
            [x: `int40[${string}]`]: undefined;
            [x: `int8[${string}]`]: undefined;
            [x: `int16[${string}]`]: undefined;
            [x: `int24[${string}]`]: undefined;
            [x: `int32[${string}]`]: undefined;
            [x: `int48[${string}]`]: undefined;
            [x: `int56[${string}]`]: undefined;
            [x: `int64[${string}]`]: undefined;
            [x: `int72[${string}]`]: undefined;
            [x: `int80[${string}]`]: undefined;
            [x: `int88[${string}]`]: undefined;
            [x: `int96[${string}]`]: undefined;
            [x: `int104[${string}]`]: undefined;
            [x: `int112[${string}]`]: undefined;
            [x: `int120[${string}]`]: undefined;
            [x: `int128[${string}]`]: undefined;
            [x: `int136[${string}]`]: undefined;
            [x: `int144[${string}]`]: undefined;
            [x: `int152[${string}]`]: undefined;
            [x: `int160[${string}]`]: undefined;
            [x: `int168[${string}]`]: undefined;
            [x: `int176[${string}]`]: undefined;
            [x: `int184[${string}]`]: undefined;
            [x: `int192[${string}]`]: undefined;
            [x: `int200[${string}]`]: undefined;
            [x: `int208[${string}]`]: undefined;
            [x: `int216[${string}]`]: undefined;
            [x: `int224[${string}]`]: undefined;
            [x: `int232[${string}]`]: undefined;
            [x: `int240[${string}]`]: undefined;
            [x: `int248[${string}]`]: undefined;
            [x: `int256[${string}]`]: undefined;
            [x: `uint[${string}]`]: undefined;
            [x: `uint40[${string}]`]: undefined;
            [x: `uint8[${string}]`]: undefined;
            [x: `uint16[${string}]`]: undefined;
            [x: `uint24[${string}]`]: undefined;
            [x: `uint32[${string}]`]: undefined;
            [x: `uint48[${string}]`]: undefined;
            [x: `uint56[${string}]`]: undefined;
            [x: `uint64[${string}]`]: undefined;
            [x: `uint72[${string}]`]: undefined;
            [x: `uint80[${string}]`]: undefined;
            [x: `uint88[${string}]`]: undefined;
            [x: `uint96[${string}]`]: undefined;
            [x: `uint104[${string}]`]: undefined;
            [x: `uint112[${string}]`]: undefined;
            [x: `uint120[${string}]`]: undefined;
            [x: `uint128[${string}]`]: undefined;
            [x: `uint136[${string}]`]: undefined;
            [x: `uint144[${string}]`]: undefined;
            [x: `uint152[${string}]`]: undefined;
            [x: `uint160[${string}]`]: undefined;
            [x: `uint168[${string}]`]: undefined;
            [x: `uint176[${string}]`]: undefined;
            [x: `uint184[${string}]`]: undefined;
            [x: `uint192[${string}]`]: undefined;
            [x: `uint200[${string}]`]: undefined;
            [x: `uint208[${string}]`]: undefined;
            [x: `uint216[${string}]`]: undefined;
            [x: `uint224[${string}]`]: undefined;
            [x: `uint232[${string}]`]: undefined;
            [x: `uint240[${string}]`]: undefined;
            [x: `uint248[${string}]`]: undefined;
            [x: `uint256[${string}]`]: undefined;
            string?: undefined;
            address?: undefined;
            bool?: undefined;
            bytes?: undefined;
            bytes1?: undefined;
            bytes20?: undefined;
            bytes2?: undefined;
            bytes3?: undefined;
            bytes4?: undefined;
            bytes5?: undefined;
            bytes6?: undefined;
            bytes7?: undefined;
            bytes8?: undefined;
            bytes9?: undefined;
            bytes10?: undefined;
            bytes11?: undefined;
            bytes12?: undefined;
            bytes13?: undefined;
            bytes14?: undefined;
            bytes15?: undefined;
            bytes16?: undefined;
            bytes17?: undefined;
            bytes18?: undefined;
            bytes19?: undefined;
            bytes21?: undefined;
            bytes22?: undefined;
            bytes23?: undefined;
            bytes24?: undefined;
            bytes25?: undefined;
            bytes26?: undefined;
            bytes27?: undefined;
            bytes28?: undefined;
            bytes29?: undefined;
            bytes30?: undefined;
            bytes31?: undefined;
            bytes32?: undefined;
            int40?: undefined;
            int8?: undefined;
            int16?: undefined;
            int24?: undefined;
            int32?: undefined;
            int48?: undefined;
            int56?: undefined;
            int64?: undefined;
            int72?: undefined;
            int80?: undefined;
            int88?: undefined;
            int96?: undefined;
            int104?: undefined;
            int112?: undefined;
            int120?: undefined;
            int128?: undefined;
            int136?: undefined;
            int144?: undefined;
            int152?: undefined;
            int160?: undefined;
            int168?: undefined;
            int176?: undefined;
            int184?: undefined;
            int192?: undefined;
            int200?: undefined;
            int208?: undefined;
            int216?: undefined;
            int224?: undefined;
            int232?: undefined;
            int240?: undefined;
            int248?: undefined;
            int256?: undefined;
            uint40?: undefined;
            uint8?: undefined;
            uint16?: undefined;
            uint24?: undefined;
            uint32?: undefined;
            uint48?: undefined;
            uint56?: undefined;
            uint64?: undefined;
            uint72?: undefined;
            uint80?: undefined;
            uint88?: undefined;
            uint96?: undefined;
            uint104?: undefined;
            uint112?: undefined;
            uint120?: undefined;
            uint128?: undefined;
            uint136?: undefined;
            uint144?: undefined;
            uint152?: undefined;
            uint160?: undefined;
            uint168?: undefined;
            uint176?: undefined;
            uint184?: undefined;
            uint192?: undefined;
            uint200?: undefined;
            uint208?: undefined;
            uint216?: undefined;
            uint224?: undefined;
            uint232?: undefined;
            uint240?: undefined;
            uint248?: undefined;
            uint256?: undefined;
        } | {
            [key: string]: unknown;
        }, TPrimaryType extends string>(args: import("viem").SignTypedDataParameters<TTypedData, TPrimaryType, SmartAccount<Name, TTransport, TChain>>) => Promise<`0x${string}`>;
        deployContract: <const TAbi extends readonly unknown[] | import("viem").Abi, TChainOverride_1 extends Chain | undefined = undefined>(args: import("viem").DeployContractParameters<TAbi, undefined, SmartAccount<Name, TTransport, TChain>, TChainOverride_1> extends infer T ? { [K in keyof T]: import("viem").DeployContractParameters<TAbi, undefined, SmartAccount<Name, TTransport, TChain>, TChainOverride_1>[K]; } : never) => Promise<`0x${string}`>;
        writeContract: <const TAbi_1 extends readonly unknown[] | import("viem").Abi, TFunctionName extends import("viem").ContractFunctionName<TAbi_1, "payable" | "nonpayable"> = import("viem").ContractFunctionName<TAbi_1, "payable" | "nonpayable">, TArgs extends import("viem").ContractFunctionArgs<TAbi_1, "payable" | "nonpayable", TFunctionName> = import("viem").ContractFunctionArgs<TAbi_1, "payable" | "nonpayable", TFunctionName>, TChainOverride_2 extends Chain | undefined = undefined>(args: import("viem").WriteContractParameters<TAbi_1, TFunctionName, TArgs, undefined, SmartAccount<Name, TTransport, TChain>, TChainOverride_2>) => Promise<`0x${string}`>;
        prepareUserOperationRequest: <TTransport extends Transport>(args: {
            userOperation: import("permissionless/types").PartialBy<import("permissionless").UserOperation, "sender" | "nonce" | "maxFeePerGas" | "maxPriorityFeePerGas" | "initCode" | "callGasLimit" | "verificationGasLimit" | "preVerificationGas" | "paymasterAndData" | "signature">;
            account?: import("permissionless/_types/accounts").SmartAccount | undefined;
            sponsorUserOperation?: ((args: {
                userOperation: import("permissionless").UserOperation;
                entryPoint: `0x${string}`;
            }) => Promise<import("permissionless").UserOperation>) | undefined;
        }, stateOverrides?: import("permissionless/_types/types/bundler").StateOverrides | undefined) => Promise<{
            sender: `0x${string}`;
            nonce: bigint;
            initCode: `0x${string}`;
            callData: `0x${string}`;
            callGasLimit: bigint;
            verificationGasLimit: bigint;
            preVerificationGas: bigint;
            maxFeePerGas: bigint;
            maxPriorityFeePerGas: bigint;
            paymasterAndData: `0x${string}`;
            signature: `0x${string}`;
        }>;
        sendUserOperation: <TTransport_1 extends Transport>(args: {
            userOperation: import("permissionless/types").PartialBy<import("permissionless").UserOperation, "sender" | "nonce" | "maxFeePerGas" | "maxPriorityFeePerGas" | "initCode" | "callGasLimit" | "verificationGasLimit" | "preVerificationGas" | "paymasterAndData" | "signature">;
            account?: import("permissionless/_types/accounts").SmartAccount | undefined;
            sponsorUserOperation?: ((args: {
                userOperation: import("permissionless").UserOperation;
                entryPoint: `0x${string}`;
            }) => Promise<import("permissionless").UserOperation>) | undefined;
        }) => Promise<`0x${string}`>;
        sendTransactions: (args: {
            transactions: {
                to: `0x${string}`;
                value: bigint;
                data: `0x${string}`;
            }[];
            account?: import("permissionless/_types/accounts").SmartAccount | undefined;
            sponsorUserOperation?: ((args: {
                userOperation: import("permissionless").UserOperation;
                entryPoint: `0x${string}`;
            }) => Promise<import("permissionless").UserOperation>) | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            nonce?: bigint | undefined;
        }) => Promise<`0x${string}`>;
        extend: <const client extends {
            [x: string]: unknown;
            account?: undefined;
            batch?: undefined;
            cacheTime?: undefined;
            ccipRead?: undefined;
            chain?: undefined;
            key?: undefined;
            name?: undefined;
            pollingInterval?: undefined;
            request?: undefined;
            transport?: undefined;
            type?: undefined;
            uid?: undefined;
        } & import("viem").ExactPartial<Pick<import("viem").PublicActions<SmartAccountParameters<X, TTransport, TChain, TSource, TAddress>["bundlerTransport"], undefined, SmartAccount<Name, TTransport, TChain>>, "getChainId" | "prepareTransactionRequest" | "sendRawTransaction" | "call" | "createContractEventFilter" | "createEventFilter" | "estimateContractGas" | "estimateGas" | "getBlock" | "getBlockNumber" | "getContractEvents" | "getEnsText" | "getFilterChanges" | "getGasPrice" | "getLogs" | "getTransaction" | "getTransactionCount" | "getTransactionReceipt" | "readContract" | "simulateContract" | "uninstallFilter" | "watchBlockNumber" | "watchContractEvent"> & Pick<import("viem").WalletActions<undefined, SmartAccount<Name, TTransport, TChain>>, "sendTransaction" | "writeContract">>>(fn: (client: import("viem").Client<SmartAccountParameters<X, TTransport, TChain, TSource, TAddress>["bundlerTransport"], undefined, SmartAccount<Name, TTransport, TChain>, import("permissionless/_types/types/bundler").BundlerRpcSchema, import("permissionless").SmartAccountActions<undefined, SmartAccount<Name, TTransport, TChain>>>) => client) => import("viem").Client<SmartAccountParameters<X, TTransport, TChain, TSource, TAddress>["bundlerTransport"], undefined, SmartAccount<Name, TTransport, TChain>, import("permissionless/_types/types/bundler").BundlerRpcSchema, { [K_1 in keyof client]: client[K_1]; } & import("permissionless").SmartAccountActions<undefined, SmartAccount<Name, TTransport, TChain>>>;
    } & {
        estimateGas?: (() => bigint | undefined) | undefined;
    }>;
}, {}>>;
export declare function simpleSmartAccount<TTransport extends Transport = Transport, TChain extends Chain | undefined = Chain | undefined, TSource extends string = string, TAddress extends Address = Address>({ publicClient, signer, bundlerTransport, sponsorUserOperation, ...rest }: SimpleSmartAccountParameters<TTransport, TChain, TSource, TAddress>): Promise<import("wagmi").CreateConnectorFn<unknown, {
    id: string;
    name: string;
    type: string;
    connect: ({ chainId }?: {
        chainId?: number | undefined;
        isReconnecting?: boolean | undefined;
    } | undefined) => Promise<{
        accounts: `0x${string}`[];
        chainId: number;
    }>;
    disconnect: () => Promise<void>;
    getAccounts: () => Promise<`0x${string}`[]>;
    getChainId: () => Promise<number>;
    getProvider: () => Promise<void>;
    isAuthorized: () => Promise<true>;
    onAccountsChanged: () => void;
    onChainChanged: () => void;
    onDisconnect: () => void;
    getClient: ({ chainId: requestedChainId }: {
        chainId: number;
    }) => Promise<{
        account: SmartAccount<"SimpleSmartAccount", TTransport, TChain>;
        batch?: {
            multicall?: boolean | {
                batchSize?: number | undefined;
                wait?: number | undefined;
            } | undefined;
        } | undefined;
        cacheTime: number;
        ccipRead?: false | {
            request?: ((parameters: import("viem").CcipRequestParameters) => Promise<`0x${string}`>) | undefined;
        } | undefined;
        chain: undefined;
        key: string;
        name: string;
        pollingInterval: number;
        request: import("viem").EIP1193RequestFn<import("permissionless/_types/types/bundler").BundlerRpcSchema>;
        transport: ReturnType<TTransport>["config"] & ReturnType<TTransport>["value"];
        type: string;
        uid: string;
        sendTransaction: <TChainOverride extends Chain | undefined>(args: import("viem").SendTransactionParameters<undefined, SmartAccount<"SimpleSmartAccount", TTransport, TChain>, TChainOverride>) => Promise<`0x${string}`>;
        signMessage: (args: import("viem").SignMessageParameters<SmartAccount<"SimpleSmartAccount", TTransport, TChain>>) => Promise<`0x${string}`>;
        signTypedData: <const TTypedData extends {
            [x: string]: readonly import("viem").TypedDataParameter[];
            [x: `string[${string}]`]: undefined;
            [x: `function[${string}]`]: undefined;
            [x: `address[${string}]`]: undefined;
            [x: `bool[${string}]`]: undefined;
            [x: `bytes[${string}]`]: undefined;
            [x: `bytes1[${string}]`]: undefined;
            [x: `bytes20[${string}]`]: undefined;
            [x: `bytes2[${string}]`]: undefined;
            [x: `bytes3[${string}]`]: undefined;
            [x: `bytes4[${string}]`]: undefined;
            [x: `bytes5[${string}]`]: undefined;
            [x: `bytes6[${string}]`]: undefined;
            [x: `bytes7[${string}]`]: undefined;
            [x: `bytes8[${string}]`]: undefined;
            [x: `bytes9[${string}]`]: undefined;
            [x: `bytes10[${string}]`]: undefined;
            [x: `bytes11[${string}]`]: undefined;
            [x: `bytes12[${string}]`]: undefined;
            [x: `bytes13[${string}]`]: undefined;
            [x: `bytes14[${string}]`]: undefined;
            [x: `bytes15[${string}]`]: undefined;
            [x: `bytes16[${string}]`]: undefined;
            [x: `bytes17[${string}]`]: undefined;
            [x: `bytes18[${string}]`]: undefined;
            [x: `bytes19[${string}]`]: undefined;
            [x: `bytes21[${string}]`]: undefined;
            [x: `bytes22[${string}]`]: undefined;
            [x: `bytes23[${string}]`]: undefined;
            [x: `bytes24[${string}]`]: undefined;
            [x: `bytes25[${string}]`]: undefined;
            [x: `bytes26[${string}]`]: undefined;
            [x: `bytes27[${string}]`]: undefined;
            [x: `bytes28[${string}]`]: undefined;
            [x: `bytes29[${string}]`]: undefined;
            [x: `bytes30[${string}]`]: undefined;
            [x: `bytes31[${string}]`]: undefined;
            [x: `bytes32[${string}]`]: undefined;
            [x: `int[${string}]`]: undefined;
            [x: `int40[${string}]`]: undefined;
            [x: `int8[${string}]`]: undefined;
            [x: `int16[${string}]`]: undefined;
            [x: `int24[${string}]`]: undefined;
            [x: `int32[${string}]`]: undefined;
            [x: `int48[${string}]`]: undefined;
            [x: `int56[${string}]`]: undefined;
            [x: `int64[${string}]`]: undefined;
            [x: `int72[${string}]`]: undefined;
            [x: `int80[${string}]`]: undefined;
            [x: `int88[${string}]`]: undefined;
            [x: `int96[${string}]`]: undefined;
            [x: `int104[${string}]`]: undefined;
            [x: `int112[${string}]`]: undefined;
            [x: `int120[${string}]`]: undefined;
            [x: `int128[${string}]`]: undefined;
            [x: `int136[${string}]`]: undefined;
            [x: `int144[${string}]`]: undefined;
            [x: `int152[${string}]`]: undefined;
            [x: `int160[${string}]`]: undefined;
            [x: `int168[${string}]`]: undefined;
            [x: `int176[${string}]`]: undefined;
            [x: `int184[${string}]`]: undefined;
            [x: `int192[${string}]`]: undefined;
            [x: `int200[${string}]`]: undefined;
            [x: `int208[${string}]`]: undefined;
            [x: `int216[${string}]`]: undefined;
            [x: `int224[${string}]`]: undefined;
            [x: `int232[${string}]`]: undefined;
            [x: `int240[${string}]`]: undefined;
            [x: `int248[${string}]`]: undefined;
            [x: `int256[${string}]`]: undefined;
            [x: `uint[${string}]`]: undefined;
            [x: `uint40[${string}]`]: undefined;
            [x: `uint8[${string}]`]: undefined;
            [x: `uint16[${string}]`]: undefined;
            [x: `uint24[${string}]`]: undefined;
            [x: `uint32[${string}]`]: undefined;
            [x: `uint48[${string}]`]: undefined;
            [x: `uint56[${string}]`]: undefined;
            [x: `uint64[${string}]`]: undefined;
            [x: `uint72[${string}]`]: undefined;
            [x: `uint80[${string}]`]: undefined;
            [x: `uint88[${string}]`]: undefined;
            [x: `uint96[${string}]`]: undefined;
            [x: `uint104[${string}]`]: undefined;
            [x: `uint112[${string}]`]: undefined;
            [x: `uint120[${string}]`]: undefined;
            [x: `uint128[${string}]`]: undefined;
            [x: `uint136[${string}]`]: undefined;
            [x: `uint144[${string}]`]: undefined;
            [x: `uint152[${string}]`]: undefined;
            [x: `uint160[${string}]`]: undefined;
            [x: `uint168[${string}]`]: undefined;
            [x: `uint176[${string}]`]: undefined;
            [x: `uint184[${string}]`]: undefined;
            [x: `uint192[${string}]`]: undefined;
            [x: `uint200[${string}]`]: undefined;
            [x: `uint208[${string}]`]: undefined;
            [x: `uint216[${string}]`]: undefined;
            [x: `uint224[${string}]`]: undefined;
            [x: `uint232[${string}]`]: undefined;
            [x: `uint240[${string}]`]: undefined;
            [x: `uint248[${string}]`]: undefined;
            [x: `uint256[${string}]`]: undefined;
            string?: undefined;
            address?: undefined;
            bool?: undefined;
            bytes?: undefined;
            bytes1?: undefined;
            bytes20?: undefined;
            bytes2?: undefined;
            bytes3?: undefined;
            bytes4?: undefined;
            bytes5?: undefined;
            bytes6?: undefined;
            bytes7?: undefined;
            bytes8?: undefined;
            bytes9?: undefined;
            bytes10?: undefined;
            bytes11?: undefined;
            bytes12?: undefined;
            bytes13?: undefined;
            bytes14?: undefined;
            bytes15?: undefined;
            bytes16?: undefined;
            bytes17?: undefined;
            bytes18?: undefined;
            bytes19?: undefined;
            bytes21?: undefined;
            bytes22?: undefined;
            bytes23?: undefined;
            bytes24?: undefined;
            bytes25?: undefined;
            bytes26?: undefined;
            bytes27?: undefined;
            bytes28?: undefined;
            bytes29?: undefined;
            bytes30?: undefined;
            bytes31?: undefined;
            bytes32?: undefined;
            int40?: undefined;
            int8?: undefined;
            int16?: undefined;
            int24?: undefined;
            int32?: undefined;
            int48?: undefined;
            int56?: undefined;
            int64?: undefined;
            int72?: undefined;
            int80?: undefined;
            int88?: undefined;
            int96?: undefined;
            int104?: undefined;
            int112?: undefined;
            int120?: undefined;
            int128?: undefined;
            int136?: undefined;
            int144?: undefined;
            int152?: undefined;
            int160?: undefined;
            int168?: undefined;
            int176?: undefined;
            int184?: undefined;
            int192?: undefined;
            int200?: undefined;
            int208?: undefined;
            int216?: undefined;
            int224?: undefined;
            int232?: undefined;
            int240?: undefined;
            int248?: undefined;
            int256?: undefined;
            uint40?: undefined;
            uint8?: undefined;
            uint16?: undefined;
            uint24?: undefined;
            uint32?: undefined;
            uint48?: undefined;
            uint56?: undefined;
            uint64?: undefined;
            uint72?: undefined;
            uint80?: undefined;
            uint88?: undefined;
            uint96?: undefined;
            uint104?: undefined;
            uint112?: undefined;
            uint120?: undefined;
            uint128?: undefined;
            uint136?: undefined;
            uint144?: undefined;
            uint152?: undefined;
            uint160?: undefined;
            uint168?: undefined;
            uint176?: undefined;
            uint184?: undefined;
            uint192?: undefined;
            uint200?: undefined;
            uint208?: undefined;
            uint216?: undefined;
            uint224?: undefined;
            uint232?: undefined;
            uint240?: undefined;
            uint248?: undefined;
            uint256?: undefined;
        } | {
            [key: string]: unknown;
        }, TPrimaryType extends string>(args: import("viem").SignTypedDataParameters<TTypedData, TPrimaryType, SmartAccount<"SimpleSmartAccount", TTransport, TChain>>) => Promise<`0x${string}`>;
        deployContract: <const TAbi extends readonly unknown[] | import("viem").Abi, TChainOverride_1 extends Chain | undefined = undefined>(args: import("viem").DeployContractParameters<TAbi, undefined, SmartAccount<"SimpleSmartAccount", TTransport, TChain>, TChainOverride_1> extends infer T ? { [K in keyof T]: import("viem").DeployContractParameters<TAbi, undefined, SmartAccount<"SimpleSmartAccount", TTransport, TChain>, TChainOverride_1>[K]; } : never) => Promise<`0x${string}`>;
        writeContract: <const TAbi_1 extends readonly unknown[] | import("viem").Abi, TFunctionName extends import("viem").ContractFunctionName<TAbi_1, "payable" | "nonpayable"> = import("viem").ContractFunctionName<TAbi_1, "payable" | "nonpayable">, TArgs extends import("viem").ContractFunctionArgs<TAbi_1, "payable" | "nonpayable", TFunctionName> = import("viem").ContractFunctionArgs<TAbi_1, "payable" | "nonpayable", TFunctionName>, TChainOverride_2 extends Chain | undefined = undefined>(args: import("viem").WriteContractParameters<TAbi_1, TFunctionName, TArgs, undefined, SmartAccount<"SimpleSmartAccount", TTransport, TChain>, TChainOverride_2>) => Promise<`0x${string}`>;
        prepareUserOperationRequest: <TTransport extends Transport>(args: {
            userOperation: import("permissionless/types").PartialBy<import("permissionless").UserOperation, "sender" | "nonce" | "maxFeePerGas" | "maxPriorityFeePerGas" | "initCode" | "callGasLimit" | "verificationGasLimit" | "preVerificationGas" | "paymasterAndData" | "signature">;
            account?: import("permissionless/_types/accounts").SmartAccount | undefined;
            sponsorUserOperation?: ((args: {
                userOperation: import("permissionless").UserOperation;
                entryPoint: `0x${string}`;
            }) => Promise<import("permissionless").UserOperation>) | undefined;
        }, stateOverrides?: import("permissionless/_types/types/bundler").StateOverrides | undefined) => Promise<{
            sender: `0x${string}`;
            nonce: bigint;
            initCode: `0x${string}`;
            callData: `0x${string}`;
            callGasLimit: bigint;
            verificationGasLimit: bigint;
            preVerificationGas: bigint;
            maxFeePerGas: bigint;
            maxPriorityFeePerGas: bigint;
            paymasterAndData: `0x${string}`;
            signature: `0x${string}`;
        }>;
        sendUserOperation: <TTransport_1 extends Transport>(args: {
            userOperation: import("permissionless/types").PartialBy<import("permissionless").UserOperation, "sender" | "nonce" | "maxFeePerGas" | "maxPriorityFeePerGas" | "initCode" | "callGasLimit" | "verificationGasLimit" | "preVerificationGas" | "paymasterAndData" | "signature">;
            account?: import("permissionless/_types/accounts").SmartAccount | undefined;
            sponsorUserOperation?: ((args: {
                userOperation: import("permissionless").UserOperation;
                entryPoint: `0x${string}`;
            }) => Promise<import("permissionless").UserOperation>) | undefined;
        }) => Promise<`0x${string}`>;
        sendTransactions: (args: {
            transactions: {
                to: `0x${string}`;
                value: bigint;
                data: `0x${string}`;
            }[];
            account?: import("permissionless/_types/accounts").SmartAccount | undefined;
            sponsorUserOperation?: ((args: {
                userOperation: import("permissionless").UserOperation;
                entryPoint: `0x${string}`;
            }) => Promise<import("permissionless").UserOperation>) | undefined;
            maxFeePerGas?: bigint | undefined;
            maxPriorityFeePerGas?: bigint | undefined;
            nonce?: bigint | undefined;
        }) => Promise<`0x${string}`>;
        extend: <const client extends {
            [x: string]: unknown;
            account?: undefined;
            batch?: undefined;
            cacheTime?: undefined;
            ccipRead?: undefined;
            chain?: undefined;
            key?: undefined;
            name?: undefined;
            pollingInterval?: undefined;
            request?: undefined;
            transport?: undefined;
            type?: undefined;
            uid?: undefined;
        } & import("viem").ExactPartial<Pick<import("viem").PublicActions<TTransport, undefined, SmartAccount<"SimpleSmartAccount", TTransport, TChain>>, "getChainId" | "prepareTransactionRequest" | "sendRawTransaction" | "call" | "createContractEventFilter" | "createEventFilter" | "estimateContractGas" | "estimateGas" | "getBlock" | "getBlockNumber" | "getContractEvents" | "getEnsText" | "getFilterChanges" | "getGasPrice" | "getLogs" | "getTransaction" | "getTransactionCount" | "getTransactionReceipt" | "readContract" | "simulateContract" | "uninstallFilter" | "watchBlockNumber" | "watchContractEvent"> & Pick<import("viem").WalletActions<undefined, SmartAccount<"SimpleSmartAccount", TTransport, TChain>>, "sendTransaction" | "writeContract">>>(fn: (client: import("viem").Client<TTransport, undefined, SmartAccount<"SimpleSmartAccount", TTransport, TChain>, import("permissionless/_types/types/bundler").BundlerRpcSchema, import("permissionless").SmartAccountActions<undefined, SmartAccount<"SimpleSmartAccount", TTransport, TChain>>>) => client) => import("viem").Client<TTransport, undefined, SmartAccount<"SimpleSmartAccount", TTransport, TChain>, import("permissionless/_types/types/bundler").BundlerRpcSchema, { [K_1 in keyof client]: client[K_1]; } & import("permissionless").SmartAccountActions<undefined, SmartAccount<"SimpleSmartAccount", TTransport, TChain>>>;
    } & {
        estimateGas?: (() => bigint | undefined) | undefined;
    }>;
}, {}>>;
//# sourceMappingURL=simpleSmartAccount.d.ts.map